@page "/History"

@using Core.Session

@inject IGrindSessionDAO grindSessionDAO

@if (Sessions.Any())
{
    <p>
        Show:
        <label><input type="checkbox" @bind="showPath" /> path</label>
    </p>

    <QuickGrid class="table table-dark table-striped table-hover" Items="Filtered" Pagination="@pagination">
        <PropertyColumn Title="Start Date" Property="@(x => x.SessionStart)" Sortable="true" IsDefaultSortColumn="true"></PropertyColumn>
        @if (showPath)
        {
            <PropertyColumn Title="Path" Property="@(x => x.PathName)" Sortable="true">
                <ColumnOptions>
                    <div class="search-box">
                        <input type="search" autofocus @bind="pathFilter" @bind:event="oninput" placeholder="Path name..." />
                    </div>
                </ColumnOptions>
            </PropertyColumn>
        }
        <PropertyColumn Title="Class" Property="@(x => x.PlayerClass)" Sortable="true">
            <ColumnOptions>
                <div class="search-box">
                    <input type="search" autofocus @bind="classFilter" @bind:event="oninput" placeholder="Class name..." />
                </div>
            </ColumnOptions>
        </PropertyColumn>
        <PropertyColumn Title="Duration(min)" Property="@(x => x.TotalTimeInMinutes)" Sortable="true" Align="Align.Right"></PropertyColumn>
        <PropertyColumn Title="Level" Property="@(x => x.LevelFrom)" Sortable="true" Align="Align.Right"></PropertyColumn>
        <PropertyColumn Title="Exp" Property="@(x => x.ExpGetInBotSession)" Sortable="true" Align="Align.Right"></PropertyColumn>
        <PropertyColumn Title="Exp/Hour" Property="@(x => x.ExperiencePerHour)" Sortable="true" Align="Align.Right"></PropertyColumn>
        <PropertyColumn Title="Mobs" Property="@(x => x.MobsKilled)" Sortable="true" Align="Align.Right"></PropertyColumn>
        <PropertyColumn Title="Mobs/Min" Property="@(x => x.MobsPerMinute)" Sortable="true" Align="Align.Right"></PropertyColumn>
        <PropertyColumn Title="Death" Property="@(x => x.Death)" Sortable="true" Align="Align.Right"></PropertyColumn>
    </QuickGrid>

    <Paginator State="@pagination" />
}
else
{
    <div>No previous sessions!</div>
}

@code {

    PaginationState pagination = new PaginationState { ItemsPerPage = 15 };

    private IQueryable<GrindSession> Sessions = null!;

    private bool showPath = true;

    private string pathFilter = string.Empty;
    private string classFilter = string.Empty;

    private IQueryable<GrindSession> Filtered
    {
        get
        {
            var result = Sessions;

            if (!string.IsNullOrEmpty(pathFilter))
            {
                result = result.Where(c => c.PathName.Contains(pathFilter, StringComparison.CurrentCultureIgnoreCase));
            }

            if (!string.IsNullOrEmpty(classFilter))
            {
                result = result.Where(c => c.PlayerClass.ToStringF().Contains(classFilter, StringComparison.CurrentCultureIgnoreCase));
            }

            return result;
        }
    }

    protected override void OnInitialized()
    {
        Sessions = grindSessionDAO.Load();
    }
}
